{"version":3,"sources":["components/TopNav.js","components/ErrorMessage.js","routes/NewsList.js","components/ArticleTitle.js","routes/Home.js","components/ArticleSubTitle.js","routes/StockMarket.js","components/PriceTable.js","components/CurrentPrice.js","components/StockPrice.js","components/CandleChart.js","components/CompanyNews.js","actions/index.js","routes/StockQuote.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","useState","symbol","setSymbol","history","useHistory","redireactUrl","push","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","onChange","e","target","value","onKeyDown","keyCode","preventDefault","Button","onClick","ErrorMessage","error","useSelector","state","Alert","code","text","NewsList","news","map","url","key","Media","width","height","src","image","alt","headline","Body","maxLine","ellipsis","trimRight","basedOn","summary","ArticleTitle","title","Home","loading","exchanges","Spinner","animation","role","exchange","idx","to","pathname","Card","Header","market","ListGroup","Item","companies","description","StockMarket","match","params","current_page","setCurrentPage","offset","term","setTerm","startPage","slice","company","index","displaySymbol","Container","Row","Col","xs","lg","cur","md","InputGroup","aria-label","style","parseInt","Append","Text","Math","ceil","length","max_page","PriceTable","price","Table","borderless","pc","h","o","l","CurrentPrice","current_price","setCurrentPrice","socket","WebSocket","addEventListener","send","JSON","stringify","console","log","event","data","parse","p","StockPrice","selected_price","c","makeChartData","chart","i","t","CandleChart","selected_chart","s","chartType","loader","options","legend","rootProps","CompanyNews","selected_news","API_URL","API_KEY","getCompanies","a","axios","get","token","getPrice","getCompanyNews","from","getGeneralNews","category","getCandle","resolution","StockQuote","props","dispatch","useDispatch","search","location","URLSearchParams","useEffect","Promise","all","then","res","payload","fetchCompanyInfo","Tabs","defaultActiveKey","onSelect","Tab","eventKey","reducer","produce","action","streaming","store","createStore","rootReducer","applyMiddleware","thunk","name","App","fluid","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fac2edec.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nexport default function TopNav(){\r\n  const [symbol, setSymbol] = useState('');\r\n  let history = useHistory();\r\n  function redireactUrl(){\r\n    history.push(`/companies?symbol=${symbol}&desc=${symbol}`);\r\n  }\r\n  return(\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#/\">Stock</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#/\">Home</Nav.Link>\r\n          <Nav.Link href=\"#news\">News</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"write Symbol..\" className=\"mr-sm-2\"\r\n          onChange = {\r\n            (e)=>{\r\n              setSymbol(e.target.value);\r\n            }\r\n          }\r\n          onKeyDown ={\r\n            (e)=>{\r\n              if(e.keyCode ===13){\r\n                e.preventDefault();\r\n                setSymbol('');\r\n                redireactUrl();\r\n              }\r\n            }\r\n          }\r\n          />\r\n          <Button variant=\"outline-info\" onClick={\r\n            ()=>{\r\n              setSymbol('');\r\n              redireactUrl();\r\n            }\r\n          }>Search</Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ErrorMessage(){\r\n  const error = useSelector(state => state.error);\r\n  if(!error){\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      <Alert variant='danger'>{error.code} - {error.text}</Alert>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Media from 'react-bootstrap/Media';\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nfunction NewsList (){\r\n  const news = useSelector(state => state.news);\r\n  const error = useSelector(state => state.error);\r\n\r\n  if(error){\r\n    return <ErrorMessage />\r\n  } \r\n  return (\r\n    <div>\r\n      {\r\n        news.map((news)=>(\r\n          <a href={news.url} key={news.id}>\r\n            <Media className='m-3'>\r\n              <img\r\n                width={75}\r\n                height={75}\r\n                className=\"mr-3\"\r\n                src={news.image}\r\n                alt={news.headline}\r\n              />\r\n              <Media.Body>\r\n                <h5>\r\n                  <LinesEllipsis\r\n                    text={news.headline}\r\n                    maxLine='3'\r\n                    ellipsis='...'\r\n                    trimRight\r\n                    basedOn='letters'\r\n                  />\r\n                </h5>\r\n                <p>\r\n                  <LinesEllipsis\r\n                    text={news.summary}\r\n                    maxLine='3'\r\n                    ellipsis='...'\r\n                    trimRight\r\n                    basedOn='letters'\r\n                  />\r\n                </p>\r\n              </Media.Body>\r\n            </Media>\r\n          </a>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default NewsList;","import React from 'react';\r\n\r\nexport default function ArticleTitle({title}){\r\n  return (\r\n    <h1>{title}</h1>\r\n  );\r\n}","import React from 'react';\r\nimport ArticleTitle from '../components/ArticleTitle';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\n\r\nexport default function Home (){\r\n  const loading = useSelector(state => state.loading);\r\n  const exchanges = useSelector(state => state.exchanges);\r\n  const error = useSelector(state => state.error);\r\n\r\n  if(error){\r\n    return <ErrorMessage />\r\n  }\r\n  if(loading){\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ArticleTitle title='Markets'/>\r\n      {\r\n        exchanges.map((exchange,idx)=>(\r\n          <Link to={\r\n            {\r\n              pathname:`markets/${idx}`,\r\n              state:{exchanges:exchanges}\r\n            }\r\n            } key={exchange.code}>\r\n            <Card className='m-3'>\r\n              <Card.Header>{exchange.market}</Card.Header>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{exchange.companies[0].description}</ListGroup.Item>\r\n                <ListGroup.Item>{exchange.companies[1].description}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Link>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n\r\n  \r\n}","import React from 'react';\r\n\r\nexport default function ArticleTitle({title}){\r\n  return (\r\n    <h4>{title}</h4>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport ArticleTitle from '../components/ArticleTitle';\r\nimport ArticleSubTitle from '../components/ArticleSubTitle';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function StockMarket({match}){\r\n  const loading = useSelector(state => state.loading);\r\n  const idx = match.params.exchange;\r\n  const exchanges = useSelector(state => state.exchanges[idx]);\r\n  const [current_page, setCurrentPage] = useState(1);\r\n  const [offset] = useState(10);\r\n  const [term, setTerm] = useState(1);\r\n  const startPage = (current_page-1)*offset;\r\n  const error = useSelector(state => state.error);\r\n\r\n  if(error){\r\n    return <ErrorMessage />\r\n  }\r\n  if(loading){\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <ArticleTitle title={exchanges.market}/>\r\n      <ArticleSubTitle title='Company list'/>\r\n      <ListGroup>\r\n        {\r\n          exchanges.companies.slice(startPage,startPage+offset).map((company,index)=>{\r\n            if(company.description === 'N/A'){\r\n              return null;\r\n            }\r\n            return (\r\n              <Link\r\n                to={{\r\n                  pathname:`/companies?symbol=${company.symbol}&desc=${company.description}`\r\n                }}\r\n                key = {index}\r\n              >\r\n                <ListGroup.Item>\r\n                  {company.description} ({company.displaySymbol})\r\n                </ListGroup.Item>\r\n              </Link>\r\n              )\r\n          })\r\n        }\r\n      </ListGroup>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"2\" className='flex-grow-0'>\r\n            <Button variant=\"outline-primary\"\r\n            onClick={\r\n              ()=>{\r\n                setCurrentPage((cur)=>{\r\n                  if(cur>1){\r\n                    setTerm(cur-1);\r\n                    return cur-1;\r\n                  }else{\r\n                    setTerm(1);\r\n                    return 1;\r\n                  }\r\n                });\r\n                }\r\n              }> pre </Button>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <InputGroup>\r\n              <FormControl aria-label=\"currentpage\" style={{width:'3.5rem'}} className='Form_page'\r\n              value={term}\r\n              onChange={(e) => {\r\n                setTerm(parseInt(e.target.value));\r\n              }}\r\n              onKeyDown ={\r\n                (e)=>{\r\n                  if(e.keyCode ===13){\r\n                    e.preventDefault();\r\n                    setCurrentPage(term);\r\n                  }\r\n                }\r\n              }\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>{Math.ceil(exchanges.companies.length/offset)}</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs lg=\"2\" className='flex-grow-0'>\r\n            <Button variant=\"outline-primary\" \r\n             onClick={\r\n              ()=>{\r\n                const max_page = Math.ceil(exchanges.companies.length/offset);\r\n                setCurrentPage((cur)=>{\r\n                  if(cur<max_page){\r\n                    setTerm(cur+1);\r\n                    return cur+1\r\n                  }else{\r\n                    setTerm(max_page);\r\n                    return max_page\r\n                  }\r\n                });\r\n                }\r\n              }\r\n            > next </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n  \r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport default function PriceTable({price}){\r\n  return(\r\n    <Table borderless>\r\n      <tbody>\r\n        <tr>\r\n          <th>전일</th>\r\n          <td>{price.pc}</td>\r\n          <th>고가</th>\r\n          <td>{price.h}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>시가</th>\r\n          <td>{price.o}</td>\r\n          <th>저가</th>\r\n          <td>{price.l}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\r\n\r\nexport default function CurrentPrice({price, symbol}){\r\n  const [current_price,setCurrentPrice]=useState(price);\r\n  const socket = new WebSocket('wss://ws.finnhub.io?token=bqi7mrfrh5rcatj3upm0');\r\n  socket.addEventListener('open', function (e){\r\n    socket.send(JSON.stringify({'type':'subscribe', 'symbol': symbol}));\r\n    console.log(e);\r\n  });\r\n\r\n  socket.addEventListener('message', function (event) {\r\n    const data = JSON.parse(event.data);\r\n    console.log(data);\r\n    \r\n    if(data.type === 'trade'){\r\n      console.log('trade');\r\n      setCurrentPrice(data.data[0].p);\r\n    }\r\n  });\r\n  return(\r\n    <h3>\r\n      {current_price}\r\n    </h3>\r\n  );\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { useSelector } from 'react-redux';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PriceTable from './PriceTable';\r\nimport CurrentPrice from './CurrentPrice';\r\n\r\n\r\nexport default function StockPrice({symbol}){\r\n  const price = useSelector(state => state.selected_price);\r\n  if(!price){\r\n    return <div>데이터를 불러오지 못했습니다..</div>\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className='border-right d-flex justify-content-center align-items-center'>\r\n          <CurrentPrice price={price.c} symbol = {symbol}/>\r\n        </Col>\r\n        <Col>\r\n          <PriceTable price={price}/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Chart } from \"react-google-charts\";\r\n//timestamp 이해하기 쉽게 바꿔주는거 찾기\r\n//툴팁 다루는 옵션 찾기\r\nfunction makeChartData(chart){\r\n  const data = [['label', 'low-high, open-close', 'opening/initial', 'closing/final','maximum']];\r\n  for(let i = 0; i<chart.c.length; i++){\r\n    data.push([chart.t[i],chart.l[i],chart.o[i],chart.c[i],chart.h[i]]);\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default function CandleChart (){\r\n  const chart = useSelector(state => state.selected_chart);\r\n  if(!chart){\r\n    return <div>정보가 없습니다.</div>\r\n  }\r\n  \r\n  if(chart.s ==='ok'){\r\n    return (\r\n      <Chart\r\n      width={'100%'}\r\n      height={500}\r\n      chartType=\"CandlestickChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={makeChartData(chart)}\r\n      options={{\r\n        legend: 'none',\r\n      }}\r\n      rootProps={{ 'data-testid': '1' }}\r\n      />);\r\n  }else{\r\n    return <div>정보가 없습니다.</div>\r\n  }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Media from 'react-bootstrap/Media';\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\n\r\nexport default function CompanyNews(){\r\n  const news = useSelector(state => state.selected_news);\r\n  if(!news){\r\n    return(\r\n      <div>\r\n        데이터를 불러올 수 없습니다..\r\n      </div>\r\n    );\r\n  }\r\n  if(news.length === 0){\r\n    return(\r\n      <div>최근 한 달간 소식이 없습니다..</div>\r\n    )\r\n  }\r\n  return (\r\n  <div>\r\n    {\r\n      news.map((news)=>(\r\n        <a href={news.url} key={news.id}>\r\n          <Media className='m-3'>\r\n            <img\r\n              width={75}\r\n              height={75}\r\n              className=\"mr-3\"\r\n              src={news.image}\r\n              alt={news.headline}\r\n            />\r\n            <Media.Body>\r\n              <h5>\r\n                <LinesEllipsis\r\n                    text={news.headline}\r\n                    maxLine='3'\r\n                    ellipsis='...'\r\n                    trimRight\r\n                    basedOn='letters'\r\n                  />\r\n              </h5>\r\n              <p>\r\n                <LinesEllipsis\r\n                  text={news.summary}\r\n                  maxLine='3'\r\n                  ellipsis='...'\r\n                  trimRight\r\n                  basedOn='letters'\r\n                />\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n        </a>\r\n      ))\r\n    }\r\n  </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nconst API_URL = 'https://finnhub.io/api/v1/';\r\nconst API_KEY = 'bqi7mrfrh5rcatj3upm0';\r\n\r\n//예외처리\r\n\r\nconst getCompanies = async(code)=>{\r\n  return await axios.get(API_URL+'stock/symbol',{\r\n    params:{\r\n      token:API_KEY,\r\n      exchange: code\r\n    }\r\n  });\r\n}\r\n\r\nconst getPrice = async(symbol)=>{\r\n  return await axios.get(API_URL+'quote',{\r\n    params:{\r\n      token:API_KEY,\r\n      symbol:symbol\r\n    }\r\n  })\r\n}\r\nconst getCompanyNews = async(symbol)=>{\r\n  return await axios.get(API_URL+'company-news',{\r\n    params:{\r\n      token:API_KEY,\r\n      symbol:symbol,\r\n      from:'2019-01-01',\r\n      to:'2020-05-13'\r\n    }\r\n  })\r\n}\r\nconst getGeneralNews = async()=>{\r\n  return await axios.get(API_URL+'news',{\r\n    params:{\r\n      token:API_KEY,\r\n      category:'general'\r\n    }\r\n  })\r\n}\r\nconst getCandle = async(symbol)=>{\r\n  return await axios.get(API_URL+'stock/candle',{\r\n    params:{\r\n      token:API_KEY,\r\n      symbol:symbol,\r\n      resolution:'D',\r\n      from:'1572651390',\r\n      to:'1575243390'\r\n    }\r\n  })\r\n}\r\nexport function fetchCompanyInfo(symbol){\r\n  return (dispatch)=>{\r\n    dispatch({type:'START_LOADING'});\r\n    Promise.all(\r\n      [getPrice(symbol),getCompanyNews(symbol),getCandle(symbol)]\r\n    ).then((res)=>{\r\n      console.log(res);\r\n      dispatch({type:'FETCH_PRICE', payload:res[0].data});\r\n      dispatch({type:'FETCH_COMPANYNEWS', payload:res[1].data});\r\n      dispatch({type:'FETCH_CANDLE', payload:res[2].data});\r\n      dispatch({type:'END_LOADING'});\r\n    })\r\n  }\r\n}\r\n\r\nexport function fetchInitData(){\r\n  return (dispatch)=>{\r\n    dispatch({\r\n      type:'START_LOADING'\r\n    });\r\n    const exchangeslist = [\r\n      {code: 'KS', name:'KOSPI'},\r\n      {code: 'KQ', name:'KOSDAQ'},\r\n      {code: 'US', name:'US'},\r\n      {code: 'T', name:'Japan'},\r\n      {code: 'SS', name:'China'}\r\n    ];\r\n    Promise.all(\r\n      exchangeslist.map(async (exchange)=>{\r\n        return {\r\n          code: exchange.code,\r\n          market: exchange.name,\r\n          companies: (await getCompanies(exchange.code)).data\r\n        }\r\n      })\r\n    ).then((res)=>{\r\n      dispatch({\r\n        type:'FETCH_EXCHANGES',\r\n        payload: res\r\n      });\r\n      getGeneralNews().then(((res)=>{\r\n        dispatch({\r\n          type:'FETCH_GENNEWS',\r\n          payload:res.data\r\n        });\r\n        dispatch({\r\n          type:'END_LOADING'\r\n        });\r\n      }))\r\n    });\r\n  }\r\n}","import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArticleTitle from '../components/ArticleTitle';\r\nimport StockPrice from '../components/StockPrice';\r\nimport CandleChart from '../components/CandleChart';\r\nimport CompanyNews from '../components/CompanyNews';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport { fetchCompanyInfo } from '../actions';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function StockQuote(props){\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(state => state.loading);\r\n  const search = props.location.search;\r\n  const params = new URLSearchParams(search);\r\n  const symbol= params.get('symbol');\r\n  const company= params.get('desc');\r\n  const error = useSelector(state => state.error);\r\n  \r\n  useEffect(()=>{\r\n    dispatch(fetchCompanyInfo(symbol));\r\n    // eslint-disable-next-line\r\n  },[]);\r\n  \r\n  if(error){\r\n    return <ErrorMessage />\r\n  }\r\n  if(loading){\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <ArticleTitle title={company}/>\r\n      <StockPrice symbol={symbol}/>\r\n      <Tabs defaultActiveKey=\"Chart\" onSelect={(key)=>{\r\n        console.log(key);\r\n      }}>\r\n        <Tab eventKey=\"News\" title=\"News\">\r\n          <CompanyNews />\r\n        </Tab>\r\n        <Tab eventKey=\"Chart\" title=\"Chart\">\r\n          <CandleChart />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import produce from 'immer';\r\n\r\nconst initalState = {\r\n  exchanges: [],\r\n  news:[],\r\n  loading: false,\r\n  streaming:false,\r\n  error:null,\r\n  selected_price:null,\r\n  selected_news:null,\r\n  selected_chart:null\r\n}\r\n\r\nconst reducer = produce((state, action)=>{\r\n  switch(action.type){\r\n    case 'START_LOADING':\r\n      state.loading = true;\r\n      break;\r\n    case 'CLEAR_ERROR':\r\n      state.error = null;\r\n      break;\r\n    case 'ERROR':\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n      break;\r\n    case 'END_LOADING':\r\n      state.loading = false;\r\n      break;\r\n    case 'START_STREAMING':\r\n      state.streaming = true;\r\n      break;\r\n    case 'END_STREAMING':\r\n      state.streaming = false;\r\n      break;\r\n    case 'FETCH_EXCHANGES':\r\n      state.exchanges= action.payload;\r\n      break;\r\n    case 'FETCH_PRICE':\r\n      state.selected_price = action.payload;\r\n      break;\r\n    case 'FETCH_COMPANYNEWS':\r\n      state.selected_news = action.payload;\r\n      break;\r\n    case 'FETCH_GENNEWS':\r\n      state.news = action.payload;\r\n      break;\r\n    case 'FETCH_CANDLE':\r\n      state.selected_chart = action.payload;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n},initalState);\r\n\r\nexport default reducer;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route} from 'react-router-dom';\nimport TopNav from './components/TopNav';\nimport NewsList from './routes/NewsList';\nimport Home from './routes/Home';\nimport StockMarket from './routes/StockMarket';\nimport StockQuote from './routes/StockQuote';\nimport Container from 'react-bootstrap/Container';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/index';\nimport { fetchInitData } from './actions/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nstore.dispatch(fetchInitData());\nconsole.log('dispatch init data');\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <TopNav />\n        <Container fluid className = 'p-3'>\n          <Route path = '/markets/:exchange' component={StockMarket}/>\n          <Route path='/' exact={true} component={Home}/>\n          <Route path = '/companies' component={StockQuote}/>\n          <Route path = '/news' component={NewsList}/>\n        </Container>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}